import os

out_prefix = config["out_prefix"]
package_path = os.path.join(os.path.abspath(config["package_path"]), "")

include: os.path.join(package_path, "SG.rules")
include: os.path.join(package_path, "AAG.rules")

rule contigs:
    input:
        os.path.abspath(config["contigs"])
    
    output:
        out_prefix + "_knot" + os.sep + "contigs.fasta",

    shell:
        "ln -s {input} {output}"

rule reads:
    input:
        a = os.path.abspath(config["raw_reads"]) if "raw_reads" in config else os.path.abspath(config["correct_reads"])
    
    output:
        a = out_prefix + "_knot" + os.sep + "raw_reads.fasta" if "raw_reads" in config else out_prefix + "_knot" + os.sep + "raw_reads_splited.fasta",

    shell:
        "ln -s {input} {output}"

rule contigs_graph:
    input:
        os.path.abspath(config["contigs_graph"])
    
    output:
        out_prefix + "_knot" + os.sep + "contigs_graph.gfa",

    shell:
        "ln -s {input} {output}"
        
        
